1- #include <stdio.h>
void exib_Vetor(int vet[], int tamanho){
    for (int i = 0; i < tamanho; i++){
        printf("%d ", vet[i]);
    }
    printf("\n");
}
void bubbleSort(int vet[], int tamanho){
    for (int i = 0; i < tamanho - 1; i++){
        for (int j = 0; j < tamanho - i - 1; j++){
            if (vet[j] > vet[j + 1]){
                int temp = vet[j];
                vet[j] = vet[j + 1];
                vet[j + 1] = temp;
            }
        }
    }
}
void insert_Sort(int vet[], int tamanho){
    int i, key, j;
    for (i = 1; i < tamanho; i++){
        key = vet[i];
        j = i - 1;

        while (j >= 0 && vet[j] > key) {
            vet[j + 1] = vet[j];
            j = j - 1;
        }
        vet[j + 1] = key;
    }
}
int main() {
    int n;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &n);

    int vet[n];

    printf("Digite os numeros do vetor\n");
    for(int i = 0; i < n; i++){
        printf("Digite o %d nÃºmero: ", i + 1);
        scanf("%d", &vet[i]);
    }

    int tipo;
    printf("Escolha um tipo de ordenacao:\n");
    printf("1. Bubble Sort\n");
    printf("2. Insertion Sort\n");
    printf("Tipo: ");
    scanf("%d", &tipo);

    switch (tipo) {
        case 1:
            bubbleSort(vet, n);
            printf("Vetor ordenado usando Bubble Sort: ");
            exib_Vetor(vet, n);
            break;
        case 2:
            insert_Sort(vet, n);
            printf("Vetor ordenado usando Insertion Sort: ");
            exib_Vetor(vet, n);
            break;
        default:
            printf("Tipo invalido!\n");
    }

    return 0;
}
